# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-18 15:20
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Administrador')),
                ('is_profe', models.BooleanField(default=False, verbose_name='Profesor')),
                ('is_estud', models.BooleanField(default=False, verbose_name='Estudiante')),
                ('tipo_docto', models.CharField(choices=[('CEDULA CUIDADANIA', 'CEDULA CUIDADANIA'), ('CEDULA EXTRANJERIA', 'CEDULA EXTRANJERIA'), ('PASAPORTE', 'PASAPORTE'), ('TARJETA IDENTIDAD', 'TARJETA IDENTIDAD')], max_length=20, verbose_name='Tipo documento')),
                ('no_docto', models.CharField(max_length=20, verbose_name='Numero documento')),
                ('fecha_nac', models.DateField(null=True, verbose_name='Fecha nacimiento')),
                ('genero', models.CharField(choices=[('HETEROSEXUAL', 'HETEROSEXUAL'), ('HOMOSEXUAL', 'HOMOSEXUAL'), ('LESBIANA', 'LESBIANA'), ('BISEXUAL', 'BISEXUAL'), ('INDIFERENCIADO', 'INDIFERENCIADO')], max_length=20, verbose_name='Genero')),
                ('direccion', models.CharField(max_length=100, verbose_name='Direccion')),
                ('telefono', models.CharField(max_length=15, verbose_name='Telefono')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Colegio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activar')),
            ],
            options={
                'verbose_name': 'Colegio',
                'verbose_name_plural': 'Colegios',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departamento', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
            },
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipio', models.CharField(max_length=200)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eees.Departamento')),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
            },
        ),
        migrations.AddField(
            model_name='colegio',
            name='departamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eees.Departamento'),
        ),
        migrations.AddField(
            model_name='colegio',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eees.Municipio'),
        ),
    ]
